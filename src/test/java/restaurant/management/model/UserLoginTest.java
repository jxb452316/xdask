package restaurant.management.model;

import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;
import restaurant.management.ManagementApplication;
import restaurant.management.service.UserLoginService;

import java.util.List;

/**
 * UserLoginTest
 * Author: zhe.jiang
 * Desc:
 * Change log:
 * 2017/5/20 - created by zhe.jiang
 */
@RunWith(SpringRunner.class)
@SpringBootTest(classes = { ManagementApplication.class })
public class UserLoginTest {

    @Autowired
    private UserLoginService userLoginService;

    @Test
    public void testCRUD() throws Exception {
        // insert
        UserLogin login = new UserLogin("employee001", "employee001", UserLogin.USER_TYPE_EMPLOYEE);
        // before insert, id should be null
        Assert.assertEquals(null, login.getId());
        userLoginService.saveLogin(login);
        // after insert, id should be generated by jpa with non-zero value
        Assert.assertNotEquals((Long)0L, login.getId());

        // update
        login.setPassword("abc");
        userLoginService.updateLogin(login);
        // search
        List<UserLogin> logins = userLoginService.findByUsername("employee001");
        Assert.assertEquals(1, logins.size());
        // password should be changed to "abc"
        Assert.assertEquals("abc", logins.get(0).getPassword());

        // delete
        userLoginService.deleteUserById(login.getId());
        Assert.assertEquals(0, userLoginService.findByUsername("employee001").size());
    }



    @Test
    public void testAuth() throws Exception {
        UserLogin login = new UserLogin("admin", "admin", UserLogin.USER_TYPE_ADMINISTRATOR);
        userLoginService.saveLogin(login);

        UserLogin auth = userLoginService.authenticate("admin", "admin");
        Assert.assertEquals(UserLogin.USER_TYPE_ADMINISTRATOR, auth.getUsertype());
    }


}
